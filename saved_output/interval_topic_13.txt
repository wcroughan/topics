Topic 13
Top words: ['construct' 'triangle' 'coding' 'mold' 'triangles' 'constructs'
 'construction' 'summarise' 'harder' 'verbal']
Exemplar: meeting EN2009d (3000s-3120s) - weight 0.631541218637993
A: Mm .
B: , right , is an important thing , and I wonder how we can get that information back .
A: I think that this is a human [31mcoding[0m that is part of the action [31mcoding[0m . Because I don't see
B: Do you think ?
A: how anybody but a person watching this can guess why they cast off this thing at this time .
B: No , it why is not uh that's that's not the question I'm asking . The question I'm asking is what's the history of the [31mconstruct[0m ? So you have the the names of the things in there . And you have two [31mconstruct[0ms suppose we have two sub-[31mconstruct[0ms . And whichever one had two pieces put together first is the earlier numbered of those [31mconstruct[0ms , right . How do you tell the difference between adding a piece to this first [31mconstruct[0m and creating a second [31mconstruct[0m ? Mm . Okay . It's it's it's parent child relationship . Okay . So [31mconstruct[0m two could um [31mconstruct[0m one is um a red [31mtriangle[0m and a green square . Construct two is um two green squares , okay . Construct three , right , is a red [31mtriangle[0m , a green square and another red [31mtriangle[0m . Construct four okay .
A: Yeah , but that's okay 'cause they all have different underlying part numbers . And when you say what a [31mconstruct[0m
B: Okay . And you can so how are we gonna tell when for example you think we're gonna have to do human [31mcoding[0m on when two sub-[31mconstruct[0ms are put together . No , that's a definition wherein a [31mconstruct[0m has a
A: No . No , no .
B: has [31mconstruct[0ms as children ? Okay .
C: Yes .
A: Yes .
D: . Okay . Yeah 'cause I think that that's gonna that's 'cause the diagram we got there suggesting that they're only looking thing at time . So whether it's [31mtriangle[0m or whatever else . But so what you're suggesting there is they can be looking at the [31mtriangle[0m and maybe a mouse pointer and maybe an eye at the same time . Okay , okay . Yeah . Yep . Yeah , yeah . 'Cause you get 'cause you Yep . Yeah . Yep . Yep , yep . Okay , yeah . So so yeah . So so it's just a matter of adding these , the two mouse pointers and the um two gazes as extra objects . Um so yeah . As long as as long as they've got an I_D_ in there we can just say right at this between these times they're looking at that object or they're looking at the mouse , they're looking at whatever . Yep . Yeah . Pens . I confuse 'em . Yeah . that would Yeah . Yeah . Well thing is that with Yeah . . Yeah . thing thing is W_G_D_S_ formats is is working at the moment . It's actually got a separate track for each part . So Yeah . Well the Well the the the it depends on the depends on what you build in . There's different parts there's different parts whether you're doing the tamgram or whether you're doing an airplane or whatever . Um But but but thing is if if we if we got if we got tracks for each for each part we can we can easily analyse it down later on . Yeah . Yeah , well the Yeah . Yeah . Well the the the the doesn't really list part in the in the G_D_F_ . Um so yeah . That that that's not a problem . There so that basically what I've got is well there there there's places where you got the I_D_ though . So you've the an I_D_ for a part , you got an I_D_ for a location on the screen . So it shows you the target , config the clock , whatever else . Um and then we can easy add I_D_s for the two mouse points and the two gazes . Um and from that and basically all all the all the tracks are doing is saying at this between this time there's a look at this this object . Yeah , this I_D_ . Um so uh so it's effectively a track for each I_D_ . The yeah the but but Well what happen what happens there is that the the two the the existing parts basically cease to exist and a new part with a new I_D_ starts existing at the point where they're joined . Yep . Yeah . Right . Yeah . Oh . Yeah . Yeah , that that that that's what that's what that's the way he's working the moment . Because it uh it's it's generating a new I_D_ when you when you create a new part . Um Yeah . Um yeah . But there there's there's joint events . So if the if a joint event if if if it's there's joint event linked to linked to the item then you know it's become part of a [31mconstruct[0m . Um of um Yeah , the the the yeah . The the the [31mconstruct[0ms are already tagged with that . So that I'm there's actually a a separate file of the data format which says for each [31mconstruct[0m , which which two parts made it made that came together to make that [31mconstruct[0m . Yeah . But you can still you can still track what parts went into it . So you can still find [31mtriangle[0m one , whatever . Yeah . Yeah . But but that's easy uh it's easy to do because the the each [31mconstruct[0m has the I_D_s for the the things that [31mconstruct[0m it . Yeah . Yeah . Well we'll yeah well with the yeah well thing is that we we still have the X_ the X_ wave traces from the ASCII formats . So if if you want if you want to be able to say I'm looking at a square instead of I'm looking at the [31mconstruct[0m , that's it is possible to get that data out . Um it's it's yeah . It's it's not doing it's not doing it in the gest analyzer at the moment . But I can easily add it to give that information if you want . Yeah , if if you take it if you if you if you create a new part , it uh it gets a new I_D_ . So if you get if you drag a new part out of the parts bin Uh Yeah , I mean the we Yeah , I mean you know you know which way they match . So you can Yeah , the Yep . Yeah . Yeah . So yeah . Yeah , so I think that anything's loading . There's there's then two [31mtriangle[0m , isn't there ? There's two identical [31mtriangle[0ms in the tamgram . Um Well yeah yeah . When you when you specify the [31mmold[0ms in the in the in the the file that that generates the parts , like a list of parts , the [31mmold[0ms are just taken out of the the file that generate that specifies the parts . So so however many part however many however many parts there are in the file , that's how many parts appear in the in the parts box . If you have five black [31mtriangle[0ms gonna be five five parts in the five black black [31mtriangle[0ms in the parts box . But what what what but what you can do well if in the in the initial configuration you can re-use a [31mtriangle[0m . So if you so if you only want one black [31mtriangle[0m , you just create one black [31mtriangle[0m in the parts box and then re-use that that [31mtriangle[0m five times in the configuration . Yep . Yep . Well when the when the when the final [31mconstruct[0m the the way the the way the the [31mconstruct[0ms are defined in the file , you've got like your your parent [31mconstruct[0m and the parts that it's [31mconstruct[0med out of . Um and yeah , as I say , the Yeah , yeah . So you got parent child relationship and the child can be a part or it can be another [31mconstruct[0m . Yeah , yeah . 'Cause uh there's a joint action . The result the what you need for a join action you need to yeah , a [31mconstruct[0m and a part , two parts , whatever you're taking together . And then the result of that is a [31mconstruct[0m
C: Mm-hmm .
B: Okay .
D: . You've got time when that happens . You can see that [31mconstruct[0m appeared at that time . Um and you can still track the
B: Right . So we could zip we could zip through this and look at all
D: children of that [31mconstruct[0m .
B: the um all the interactions in which people build sub-[31mconstruct[0m contstructs first which we expect them to